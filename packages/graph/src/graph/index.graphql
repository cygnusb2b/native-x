scalar Date

type Query {
  ping: String!
  currentUser: User
  checkSession(input: SessionTokenInput!): Authentication
  signImageUpload(input: ImageUploadInput!): SignedImageLocation!
  advertiser(input: ModelIdInput!): Advertiser!
  allAdvertisers(pagination: PaginationInput): [Advertiser]
  allCampaigns(pagination: PaginationInput): [Campaign]
  campaign(input: ModelIdInput!): Campaign!
}

type Mutation {
  createUser(input: CreateUserInput!): User
  createAdvertiser(input: CreateAdvertiserInput!): Advertiser
  updateAdvertiser(input: UpdateAdvertiserInput!): Advertiser
  createCampaign(input: CreateCampaignInput!): Campaign
  updateCampaign(input: UpdateCampaignInput!): Campaign
  loginUser(input: LoginInput!): Authentication
  deleteSession: String
}

input PaginationInput {
  size: Int
  page: Int
  sort: String
}

type SignedImageLocation {
  url: String!
  key: String!
  expires: Int!
}

input CreateAdvertiserInput {
  name: String!
}

input UpdateAdvertiserInput {
  id: String!
  name: String!
}

input CreateCampaignInput {
  name: String!
  advertiserId: String!
}

input UpdateCampaignInput {
  id: String!
  name: String!
  advertiserId: String
}

input ModelIdInput {
  id: String!
}

input ImageUploadInput {
  name: String!
  size: Int!
  type: String!
}

input NewUserPayloadInput {
  email: String!
  password: String!
  givenName: String!
  familyName: String!
}

input CreateUserInput {
  # captcha: String
  payload: NewUserPayloadInput
}

input SessionTokenInput {
  token: String!
}

input LoginInput {
  email: String!
  password: String!
}

type Session {
  id: String!
  uid: String!
  cre: Int!
  exp: Int!
  token: String!
}

type Authentication {
  user: User!
  session: Session!
}

type User {
  id: String!
  email: String!
  givenName: String
  familyName: String
  logins: Int
  photoURL: String
}

type Advertiser {
  id: String!
  name: String!
  createdAt: Date
  updatedAt: Date
  campaigns: [Advertiser]
  campaignCount: Int
}

type Campaign {
  id: String!
  name: String!
  advertiser: Advertiser!
  deleted: Boolean
  draft: Boolean
  paused: Boolean
  creatives: [CampaignCreative]
}

type CampaignCreative {
  id: String!
  name: String!
  url: String!
  title: String
  teaser: String
  image: String
}

type Placement {
  id: String!
  template: String!
  publisher: Publisher!
}

type Publisher {
  id: String!
  name: String!
}


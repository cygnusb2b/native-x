type Session {
  id: String!
  uid: String!
  cre: Int!
  exp: Int!
  token: String!
}

type Authentication {
  user: User!
  session: Session!
}

type User implements Timestampable {
  id: String!
  email: String!
  role: String!
  givenName: String
  familyName: String
  logins: Int
  photoURL: String
  createdAt: Date
  updatedAt: Date
}

type Query {
  currentUser: User
  checkSession(input: SessionTokenInput!): Authentication
}

type Mutation {
  createUser(input: CreateUserInput!): User
  loginUser(input: LoginInput!): Authentication
  deleteSession: String
  changeUserPassword(input: ChangeUserPasswordInput!): User
  updateCurrentUserProfile(input: CurrentUserProfileInput!): User
  deleteUser(input: ModelIdInput!): String!
}

input ChangeUserPasswordInput {
  id: String!
  value: String!
  confirm: String!
}

input CurrentUserProfileInput {
  givenName: String!
  familyName: String!
}

input NewUserPayloadInput {
  email: String!
  password: String!
  givenName: String!
  familyName: String!
}

input CreateUserInput {
  # captcha: String
  payload: NewUserPayloadInput
}

input SessionTokenInput {
  token: String!
}

input LoginInput {
  email: String!
  password: String!
}

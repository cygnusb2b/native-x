type Query {
  allCampaigns(pagination: PaginationInput = {}, sort: CampaignSortInput = {}): CampaignConnection!
  campaign(input: ModelIdInput!): Campaign!
}

type Mutation {
  createCampaign(input: CreateCampaignInput!): Campaign!
  updateCampaign(input: UpdateCampaignInput!): Campaign!
  addCampaignCreative(input: AddCampaignCreativeInput!): CampaignCreative!
  updateCampaignCreative(input: UpdateCampaignCreativeInput!): CampaignCreative!
  removeCampaignCreative(input: RemoveCampaignCreativeInput!): String!
  setCampaignCriteria(input: SetCampaignCriteriaInput!): CampaignCriteria!
}

enum CampaignSortField {
  name
  createdAt
  updatedAt
}

enum CampaignStatus {
  Active
  Paused
  Draft
  Deleted
}

type Campaign {
  id: String!
  name: String!
  createdAt: Date
  updatedAt: Date
  advertiser: Advertiser!
  status: CampaignStatus!
  url: String!
  creatives: [CampaignCreative]
  criteria: CampaignCriteria
}

type CampaignCreative {
  id: String!
  title: String
  teaser: String
  image: CampaignCreativeImage
}

type CampaignCriteria {
  id: String!
  start: Date!
  end: Date
  placements: [Placement]
  kvs: [KeyValues]
}

type KeyValues {
  key: String!
  value: String!
}

type CampaignCreativeImage {
  id: String!
  src: String!
  filePath: String!
  mimeType: String
  fileSize: Int
  width: Int
  height: Int
  focalPoint: ImageFocalPoint
}

type ImageFocalPoint {
  x: Float!
  y: Float!
}

type CampaignConnection {
  totalCount: Int!
  edges: [CampaignEdge]!
  pageInfo: PageInfo!
}

type CampaignEdge {
  node: Campaign!
  cursor: Cursor!
}

input CampaignSortInput {
  field: CampaignSortField! = createdAt
  order: Int! = -1
}

input CreateCampaignInput {
  payload: CreateCampaignPayloadInput!
}

input CreateCampaignPayloadInput {
  name: String!
  advertiserId: String!
  url: String!
}

input UpdateCampaignInput {
  id: String!
  payload: UpdateCampaignPayloadInput!
}

input UpdateCampaignPayloadInput {
  name: String!
  url: String
  status: CampaignStatus
  advertiserId: String
}

input AddCampaignCreativeInput {
  campaignId: String!
  payload: AddCampaignCreativePayloadInput
}

input CampaignCreativeImageInput {
  filePath: String!
  height: Int
  width: Int
  fileSize: Int
  src: String!
  mimeType: String
  focalPoint: ImageFocalPointInput
}

input ImageFocalPointInput {
  x: Float!
  y: Float!
}

input AddCampaignCreativePayloadInput {
  title: String
  teaser: String
  image: CampaignCreativeImageInput
}

input RemoveCampaignCreativeInput {
  campaignId: String!
  creativeId: String!
}

input UpdateCampaignCreativeInput {
  campaignId: String!
  creativeId: String!
  payload: UpdateCampaignCreativePayloadInput
}

input UpdateCampaignCreativePayloadInput {
  title: String
  teaser: String
  image: CampaignCreativeImageInput
}

input KeyValuesPayloadInput {
  key: String!
  value: String!
}

input SetCampaignCriteriaInput {
  campaignId: String!
  payload: SetCampaignCriteriaPayloadInput
}

input SetCampaignCriteriaPayloadInput {
  start: Date!
  end: Date
  placementIds: [String!]
  kvs: [KeyValuesPayloadInput]
}

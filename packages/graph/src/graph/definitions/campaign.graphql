type Query {
  allCampaigns(pagination: PaginationInput = {}, sort: CampaignSortInput = {}): CampaignConnection!
  campaign(input: ModelIdInput!): Campaign!
  searchCampaigns(pagination: PaginationInput = {}, phrase: String!): CampaignConnection!
  campaignHash(input: CampaignHashInput!): Campaign!
  campaignCreative(input: CampaignCreativeInput): CampaignCreative!
}

type Mutation {
  createCampaign(input: CreateCampaignInput!): Campaign!
  updateCampaign(input: UpdateCampaignInput!): Campaign!

  campaignCriteria(input: CampaignCriteriaInput!): CampaignCriteria!

  addCampaignCreative(input: AddCampaignCreativeInput!): CampaignCreative!
  removeCampaignCreative(input: RemoveCampaignCreativeInput!): String!

  campaignCreativeStatus(input: CampaignCreativeStatusInput!): CampaignCreative!
  campaignCreativeDetails(input: CampaignCreativeDetailsInput!): CampaignCreative!
  campaignCreativeImage(input: CampaignCreativeImageInput!): CampaignCreative!

  campaignContacts(input: SetContactsInput!): Campaign!
}

enum CampaignSortField {
  name
  createdAt
  updatedAt
}

enum CampaignStatus {
  Active
  Paused
  Draft
  Deleted
}

enum CampaignCreativeStatus {
  Draft
  Active
}

type Campaign {
  id: String!
  name: String!
  description: String
  hash: String!
  createdAt: Date
  updatedAt: Date
  isNew: Boolean!
  advertiser: Advertiser!
  status: CampaignStatus!
  url: String
  creatives: [CampaignCreative]
  criteria: CampaignCriteria
  externalLinks: [ExternalLink]
  notify: NotificationLists
}

type CampaignCreative {
  id: String!
  title: String
  teaser: String
  status: CampaignCreativeStatus
  image: Image
}

type CampaignCriteria {
  id: String!
  start: Date!
  end: Date
  placements: [Placement]
  kvs: [KeyValues]
}

type KeyValues {
  key: String!
  value: String!
}

type ExternalLink {
  label: String
  url: String!
}

type CampaignConnection {
  totalCount: Int!
  edges: [CampaignEdge]!
  pageInfo: PageInfo!
}

type CampaignEdge {
  node: Campaign!
  cursor: Cursor!
}

input CampaignCreativeInput {
  campaignId: String!
  creativeId: String!
}

input CampaignHashInput {
  advertiserId: String!
  hash: String!
}

input CampaignSortInput {
  field: CampaignSortField! = createdAt
  order: Int! = -1
}

input CreateCampaignInput {
  payload: CreateCampaignPayloadInput!
}

input CreateCampaignPayloadInput {
  name: String!
  description: String
  advertiserId: String!
  url: String
  externalLinks: [ExternalLinkInput]
  startDate: Date
}

input UpdateCampaignInput {
  id: String!
  payload: UpdateCampaignPayloadInput!
}

input UpdateCampaignPayloadInput {
  name: String
  description: String
  url: String
  status: CampaignStatus
  advertiserId: String
  externalLinks: [ExternalLinkInput]
}

input ExternalLinkInput {
  label: String
  url: String!
}

input AddCampaignCreativeInput {
  campaignId: String!
  payload: AddCampaignCreativePayloadInput
}

input CampaignCreativeImageInput {
  campaignId: String!
  creativeId: String!
  imageId: String
}

input AddCampaignCreativePayloadInput {
  title: String
  teaser: String
  status: CampaignCreativeStatus
  imageId: String
}

input RemoveCampaignCreativeInput {
  campaignId: String!
  creativeId: String!
}

input CampaignCreativeDetailsInput {
  campaignId: String!
  creativeId: String!
  payload: CampaignCreativeDetailsPayloadInput
}

input CampaignCreativeDetailsPayloadInput {
  title: String
  teaser: String
  status: CampaignCreativeStatus
}

input CampaignCreativeStatusInput {
  campaignId: String!
  creativeId: String!
  status: CampaignCreativeStatus!
}

input KeyValuesPayloadInput {
  key: String!
  value: String!
}

input CampaignCriteriaInput {
  campaignId: String!
  payload: CampaignCriteriaPayloadInput
}

input CampaignCriteriaPayloadInput {
  start: Date!
  end: Date
  placementIds: [String!]
  kvs: [KeyValuesPayloadInput]
}

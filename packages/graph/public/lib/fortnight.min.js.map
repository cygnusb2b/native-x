{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/utils.js","webpack:///./node_modules/dom-utils/lib/matches.js","webpack:///./node_modules/dom-utils/lib/parents.js","webpack:///./node_modules/dom-utils/lib/closest.js","webpack:///./node_modules/dom-utils/lib/delegate.js","webpack:///./node_modules/dom-utils/lib/dispatch.js","webpack:///./node_modules/dom-utils/lib/get-attributes.js","webpack:///./node_modules/dom-utils/lib/parse-url.js","webpack:///./node_modules/intersection-observer/intersection-observer.js","webpack:///./src/tracker/view-listener.js","webpack:///./src/tracker/event-transport.js","webpack:///./src/tracker/link-listener.js","webpack:///./src/tracker/index.js","webpack:///./src/app.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","default","object","property","prototype","hasOwnProperty","p","s","t","e","withTimeout","callback","wait","arguments","length","wasCalled","fn","setTimeout","buildQuery","obj","keys","filter","k","map","encodeURIComponent","join","domReady","document","readyState","addEventListener","removeEventListener","extractFieldsFrom","node","nodeType","data","getAttribute","JSON","parse","decodeURIComponent","isTrackable","action","assign","target","_arguments","_loop","len","source","forEach","key","proto","window","Element","nativeMatches","matches","matchesSelector","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","element","test","item","selector","nodes","parentNode","querySelectorAll","parents","list","push","closest_closest","shouldCheckSelf","parentElements","concat","parent","delegate_delegate","ancestor","eventType","opts","listener","event","delegateTarget","composed","composedPath","useCapture","destroy","dispatch","eventName","initDict","isCustom","bubbles","cancelable","err","createEvent","detail","dispatchEvent","getAttributes","attrs","attributes","attr","HTTP_PORT","HTTPS_PORT","DEFAULT_PORT","RegExp","a","createElement","cache","parseUrl","url","location","href","charAt","port","host","replace","origin","protocol","pathname","hash","hostname","search","IntersectionObserverEntry","this","intersectionRatio","registry","IntersectionObserver","THROTTLE_TIMEOUT","POLL_INTERVAL","USE_MUTATION_OBSERVER","observe","_observationTargets","some","Error","_registerInstance","entry","_monitorIntersections","_checkForIntersections","unobserve","_unmonitorIntersections","_unregisterInstance","disconnect","takeRecords","records","_queuedEntries","slice","_initThresholds","opt_threshold","threshold","Array","isArray","sort","isNaN","_parseRootMargin","opt_rootMargin","margins","split","margin","parts","exec","parseFloat","unit","_monitoringIntersections","_monitoringInterval","setInterval","addEvent","_domObserver","MutationObserver","childList","characterData","subtree","clearInterval","removeEvent","rootIsInDom","_rootIsInDom","rootRect","_getRootRect","top","bottom","left","right","width","height","targetRect","getBoundingClientRect","rootContainsTarget","_rootContainsTarget","oldEntry","intersectionRect","_computeTargetAndRootIntersection","newEntry","time","performance","now","boundingClientRect","rootBounds","_hasCrossedThreshold","isIntersecting","_callback","getComputedStyle","display","rect1","rect2","getParentNode","atRoot","parentRect","parentComputedStyle","root","body","documentElement","overflow","Math","max","min","html","clientWidth","clientHeight","_expandRectByRootMargin","rect","_rootMarginValues","newRect","oldRatio","newRatio","thresholds","containsDeep","indexOf","index","splice","targetArea","intersectionArea","opt_options","timeout","timer","options","bind","rootMargin","opt_useCapture","attachEvent","detatchEvent","el","child","_utils","isVisible","record","ViewListener","tracker","_this","TypeError","trackOnce","handleIntersection","handleMutations","handleAddedElement","handleRemovedElement","mutationObserver","intersectionObserver","observeElements","_this2","getElements","requestAnimationFrame","elementMap","sendEvent","mutations","_this3","mutation","addedNodes","removedNodes","removed","walkTree","added","childNodes","fields","execute","transport","unobserveAllElements","elements","domain","EventTransport","defaults","_ref","pid","cid","uuid","_ref2","act","String","trim","toLowerCase","params","_","Date","getTime","query","endpoint","createUrl","navigator","sendBeacon","img","onload","onerror","src","_domUtils","LinkListener","enabled","events","shouldTrackLink","handleInteractions","delegates","delegate","link","eventOpts","type","metaKey","ctrlKey","shiftKey","altKey","which","handler","defaultPrevented","preventDefault","original","urlParser","listeners","Tracker","trackLinks","debug","onLinkTrack","_eventTransport2","commands","send","_linkListener2","_viewListener2","command","_commands","_console","_len","args","_key","console","info","apply","_tracker","from","queueName","FortnightObject","queue","q","_app2","_toConsumableArray"],"mappings":"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","file":"fortnight.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n","\n/**\n * Returns a wrapped version of the provided function.\n * If it's not called when the timeout is reached, it will be called regardless.\n * The wrapped function will also be prevented from being called more than once.\n *\n * @param {Function} callback\n * @param {number} wait\n * @return {Function}\n */\nexport function withTimeout(callback, wait = 2000) {\n  let wasCalled = false;\n  const fn = (...args) => {\n    if (!wasCalled) {\n      wasCalled = true;\n      callback(...args);\n    }\n  };\n  setTimeout(fn, wait);\n  return fn;\n}\n\n/**\n * A simplified shim of Object.assign.\n *\n * @param {Object} target\n * @param {...Object} sources\n * @return {Object}\n */\nexport const assign = Object.assign || function assign(target, ...sources) {\n  for (let i = 0, len = sources.length; i < len; i += 1) {\n    const source = Object(sources[i]);\n    Object.keys(source).forEach((key) => {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        // eslint-disable-next-line no-param-reassign\n        target[key] = source[key];\n      }\n    });\n  }\n  return target;\n};\n\n/**\n * Builds a simply query string from object.\n *\n * @param {object} obj\n * @return {string}\n */\nexport function buildQuery(obj) {\n  return Object.keys(obj).filter(k => obj[k]).map(k => `${encodeURIComponent(k)}=${encodeURIComponent(obj[k])}`).join('&');\n}\n\n/**\n * Will invoke the provided function when the DOM is ready.\n * If already ready, the callback will be invoked immediately.\n *\n * @param {Function} callback The ready callback.\n */\nexport function domReady(callback) {\n  if (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', function fn() {\n      document.removeEventListener('DOMContentLoaded', fn);\n      callback();\n    });\n  } else {\n    callback();\n  }\n}\n\n/**\n * Extracts an event fields object from a node.\n *\n * @param {DOMNode} node\n * @param {string} attrName\n * @return {object}\n */\nexport function extractFieldsFrom(node) {\n  if (node.nodeType !== 1) return {};\n  const data = node.getAttribute('data-fortnight-fields');\n  if (!data) return {};\n  try {\n    return JSON.parse(decodeURIComponent(data)) || {};\n  } catch (e) {\n    return {};\n  }\n}\n\n/**\n * Determines if a node is trackable for the provided action.\n *\n * @param {DOMNode} node\n * @param {string} action\n * @return {boolean}\n */\nexport function isTrackable(node, action) {\n  if (node.nodeType !== 1) return false;\n  const value = node.getAttribute('data-fortnight-action');\n  return action === value;\n}\n","const proto = window.Element.prototype;\nconst nativeMatches = proto.matches ||\n      proto.matchesSelector ||\n      proto.webkitMatchesSelector ||\n      proto.mozMatchesSelector ||\n      proto.msMatchesSelector ||\n      proto.oMatchesSelector;\n\n\n/**\n * Tests if a DOM elements matches any of the test DOM elements or selectors.\n * @param {Element} element The DOM element to test.\n * @param {Element|string|Array<Element|string>} test A DOM element, a CSS\n *     selector, or an array of DOM elements or CSS selectors to match against.\n * @return {boolean} True of any part of the test matches.\n */\nexport default function matches(element, test) {\n  // Validate input.\n  if (element && element.nodeType == 1 && test) {\n    // if test is a string or DOM element test it.\n    if (typeof test == 'string' || test.nodeType == 1) {\n      return element == test ||\n          matchesSelector(element, /** @type {string} */ (test));\n    } else if ('length' in test) {\n      // if it has a length property iterate over the items\n      // and return true if any match.\n      for (let i = 0, item; item = test[i]; i++) {\n        if (element == item || matchesSelector(element, item)) return true;\n      }\n    }\n  }\n  // Still here? Return false\n  return false;\n}\n\n\n/**\n * Tests whether a DOM element matches a selector. This polyfills the native\n * Element.prototype.matches method across browsers.\n * @param {!Element} element The DOM element to test.\n * @param {string} selector The CSS selector to test element against.\n * @return {boolean} True if the selector matches.\n */\nfunction matchesSelector(element, selector) {\n  if (typeof selector != 'string') return false;\n  if (nativeMatches) return nativeMatches.call(element, selector);\n  const nodes = element.parentNode.querySelectorAll(selector);\n  for (let i = 0, node; node = nodes[i]; i++) {\n    if (node == element) return true;\n  }\n  return false;\n}\n","/**\n * Returns an array of a DOM element's parent elements.\n * @param {!Element} element The DOM element whose parents to get.\n * @return {!Array} An array of all parent elemets, or an empty array if no\n *     parent elements are found.\n */\nexport default function parents(element) {\n  const list = [];\n  while (element && element.parentNode && element.parentNode.nodeType == 1) {\n    element = /** @type {!Element} */ (element.parentNode);\n    list.push(element);\n  }\n  return list;\n}\n","import matches from './matches';\nimport parents from './parents';\n\n/**\n * Gets the closest parent element that matches the passed selector.\n * @param {Element} element The element whose parents to check.\n * @param {string} selector The CSS selector to match against.\n * @param {boolean=} shouldCheckSelf True if the selector should test against\n *     the passed element itself.\n * @return {Element|undefined} The matching element or undefined.\n */\nexport default function closest(element, selector, shouldCheckSelf = false) {\n  if (!(element && element.nodeType == 1 && selector)) return;\n  const parentElements =\n      (shouldCheckSelf ? [element] : []).concat(parents(element));\n\n  for (let i = 0, parent; parent = parentElements[i]; i++) {\n    if (matches(parent, selector)) return parent;\n  }\n}\n","import closest from './closest';\nimport matches from './matches';\n\n/**\n * Delegates the handling of events for an element matching a selector to an\n * ancestor of the matching element.\n * @param {!Node} ancestor The ancestor element to add the listener to.\n * @param {string} eventType The event type to listen to.\n * @param {string} selector A CSS selector to match against child elements.\n * @param {!Function} callback A function to run any time the event happens.\n * @param {Object=} opts A configuration options object. The available options:\n *     - useCapture<boolean>: If true, bind to the event capture phase.\n *     - deep<boolean>: If true, delegate into shadow trees.\n * @return {Object} The delegate object. It contains a destroy method.\n */\nexport default function delegate(\n    ancestor, eventType, selector, callback, opts = {}) {\n  // Defines the event listener.\n  const listener = function(event) {\n    let delegateTarget;\n\n    // If opts.composed is true and the event originated from inside a Shadow\n    // tree, check the composed path nodes.\n    if (opts.composed && typeof event.composedPath == 'function') {\n      const composedPath = event.composedPath();\n      for (let i = 0, node; node = composedPath[i]; i++) {\n        if (node.nodeType == 1 && matches(node, selector)) {\n          delegateTarget = node;\n        }\n      }\n    } else {\n      // Otherwise check the parents.\n      delegateTarget = closest(event.target, selector, true);\n    }\n\n    if (delegateTarget) {\n      callback.call(delegateTarget, event, delegateTarget);\n    }\n  };\n\n  ancestor.addEventListener(eventType, listener, opts.useCapture);\n\n  return {\n    destroy: function() {\n      ancestor.removeEventListener(eventType, listener, opts.useCapture);\n    },\n  };\n}\n","/**\n * Dispatches an event on the passed element.\n * @param {!Element} element The DOM element to dispatch the event on.\n * @param {string} eventType The type of event to dispatch.\n * @param {Object|string=} eventName A string name of the event constructor\n *     to use. Defaults to 'Event' if nothing is passed or 'CustomEvent' if\n *     a value is set on `initDict.detail`. If eventName is given an object\n *     it is assumed to be initDict and thus reassigned.\n * @param {Object=} initDict The initialization attributes for the\n *     event. A `detail` property can be used here to pass custom data.\n * @return {boolean} The return value of `element.dispatchEvent`, which will\n *     be false if any of the event listeners called `preventDefault`.\n */\nexport default function dispatch(\n    element, eventType, eventName = 'Event', initDict = {}) {\n  let event;\n  let isCustom;\n\n  // eventName is optional\n  if (typeof eventName == 'object') {\n    initDict = eventName;\n    eventName = 'Event';\n  }\n\n  initDict.bubbles = initDict.bubbles || false;\n  initDict.cancelable = initDict.cancelable || false;\n  initDict.composed = initDict.composed || false;\n\n  // If a detail property is passed, this is a custom event.\n  if ('detail' in initDict) isCustom = true;\n  eventName = isCustom ? 'CustomEvent' : eventName;\n\n  // Tries to create the event using constructors, if that doesn't work,\n  // fallback to `document.createEvent()`.\n  try {\n    event = new window[eventName](eventType, initDict);\n  } catch(err) {\n    event = document.createEvent(eventName);\n    const initMethod = 'init' + (isCustom ? 'Custom' : '') + 'Event';\n    event[initMethod](eventType, initDict.bubbles,\n                      initDict.cancelable, initDict.detail);\n  }\n\n  return element.dispatchEvent(event);\n}\n","/**\n * Gets all attributes of an element as a plain JavaScriot object.\n * @param {Element} element The element whose attributes to get.\n * @return {!Object} An object whose keys are the attribute keys and whose\n *     values are the attribute values. If no attributes exist, an empty\n *     object is returned.\n */\nexport default function getAttributes(element) {\n  const attrs = {};\n\n  // Validate input.\n  if (!(element && element.nodeType == 1)) return attrs;\n\n  // Return an empty object if there are no attributes.\n  const map = element.attributes;\n  if (map.length === 0) return {};\n\n  for (let i = 0, attr; attr = map[i]; i++) {\n    attrs[attr.name] = attr.value;\n  }\n  return attrs;\n}\n","const HTTP_PORT = '80';\nconst HTTPS_PORT = '443';\nconst DEFAULT_PORT = RegExp(':(' + HTTP_PORT + '|' + HTTPS_PORT + ')$');\n\n\nconst a = document.createElement('a');\nconst cache = {};\n\n\n/**\n * Parses the given url and returns an object mimicing a `Location` object.\n * @param {string} url The url to parse.\n * @return {!Object} An object with the same properties as a `Location`.\n */\nexport default function parseUrl(url) {\n  // All falsy values (as well as \".\") should map to the current URL.\n  url = (!url || url == '.') ? location.href : url;\n\n  if (cache[url]) return cache[url];\n\n  a.href = url;\n\n  // When parsing file relative paths (e.g. `../index.html`), IE will correctly\n  // resolve the `href` property but will keep the `..` in the `path` property.\n  // It will also not include the `host` or `hostname` properties. Furthermore,\n  // IE will sometimes return no protocol or just a colon, especially for things\n  // like relative protocol URLs (e.g. \"//google.com\").\n  // To workaround all of these issues, we reparse with the full URL from the\n  // `href` property.\n  if (url.charAt(0) == '.' || url.charAt(0) == '/') return parseUrl(a.href);\n\n  // Don't include default ports.\n  let port = (a.port == HTTP_PORT || a.port == HTTPS_PORT) ? '' : a.port;\n\n  // PhantomJS sets the port to \"0\" when using the file: protocol.\n  port = port == '0' ? '' : port;\n\n  // Sometimes IE incorrectly includes a port for default ports\n  // (e.g. `:80` or `:443`) even when no port is specified in the URL.\n  // http://bit.ly/1rQNoMg\n  const host = a.host.replace(DEFAULT_PORT, '');\n\n  // Not all browser support `origin` so we have to build it.\n  const origin = a.origin ? a.origin : a.protocol + '//' + host;\n\n  // Sometimes IE doesn't include the leading slash for pathname.\n  // http://bit.ly/1rQNoMg\n  const pathname = a.pathname.charAt(0) == '/' ? a.pathname : '/' + a.pathname;\n\n  return cache[url] = {\n    hash: a.hash,\n    host: host,\n    hostname: a.hostname,\n    href: a.href,\n    origin: origin,\n    pathname: pathname,\n    port: port,\n    protocol: a.protocol,\n    search: a.search,\n  };\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n *\n */\n\n(function(window, document) {\n'use strict';\n\n\n// Exits early if all IntersectionObserver and IntersectionObserverEntry\n// features are natively supported.\nif ('IntersectionObserver' in window &&\n    'IntersectionObserverEntry' in window &&\n    'intersectionRatio' in window.IntersectionObserverEntry.prototype) {\n\n  // Minimal polyfill for Edge 15's lack of `isIntersecting`\n  // See: https://github.com/w3c/IntersectionObserver/issues/211\n  if (!('isIntersecting' in window.IntersectionObserverEntry.prototype)) {\n    Object.defineProperty(window.IntersectionObserverEntry.prototype,\n      'isIntersecting', {\n      get: function () {\n        return this.intersectionRatio > 0;\n      }\n    });\n  }\n  return;\n}\n\n\n/**\n * An IntersectionObserver registry. This registry exists to hold a strong\n * reference to IntersectionObserver instances currently observering a target\n * element. Without this registry, instances without another reference may be\n * garbage collected.\n */\nvar registry = [];\n\n\n/**\n * Creates the global IntersectionObserverEntry constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-entry\n * @param {Object} entry A dictionary of instance properties.\n * @constructor\n */\nfunction IntersectionObserverEntry(entry) {\n  this.time = entry.time;\n  this.target = entry.target;\n  this.rootBounds = entry.rootBounds;\n  this.boundingClientRect = entry.boundingClientRect;\n  this.intersectionRect = entry.intersectionRect || getEmptyRect();\n  this.isIntersecting = !!entry.intersectionRect;\n\n  // Calculates the intersection ratio.\n  var targetRect = this.boundingClientRect;\n  var targetArea = targetRect.width * targetRect.height;\n  var intersectionRect = this.intersectionRect;\n  var intersectionArea = intersectionRect.width * intersectionRect.height;\n\n  // Sets intersection ratio.\n  if (targetArea) {\n    this.intersectionRatio = intersectionArea / targetArea;\n  } else {\n    // If area is zero and is intersecting, sets to 1, otherwise to 0\n    this.intersectionRatio = this.isIntersecting ? 1 : 0;\n  }\n}\n\n\n/**\n * Creates the global IntersectionObserver constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-interface\n * @param {Function} callback The function to be invoked after intersection\n *     changes have queued. The function is not invoked if the queue has\n *     been emptied by calling the `takeRecords` method.\n * @param {Object=} opt_options Optional configuration options.\n * @constructor\n */\nfunction IntersectionObserver(callback, opt_options) {\n\n  var options = opt_options || {};\n\n  if (typeof callback != 'function') {\n    throw new Error('callback must be a function');\n  }\n\n  if (options.root && options.root.nodeType != 1) {\n    throw new Error('root must be an Element');\n  }\n\n  // Binds and throttles `this._checkForIntersections`.\n  this._checkForIntersections = throttle(\n      this._checkForIntersections.bind(this), this.THROTTLE_TIMEOUT);\n\n  // Private properties.\n  this._callback = callback;\n  this._observationTargets = [];\n  this._queuedEntries = [];\n  this._rootMarginValues = this._parseRootMargin(options.rootMargin);\n\n  // Public properties.\n  this.thresholds = this._initThresholds(options.threshold);\n  this.root = options.root || null;\n  this.rootMargin = this._rootMarginValues.map(function(margin) {\n    return margin.value + margin.unit;\n  }).join(' ');\n}\n\n\n/**\n * The minimum interval within which the document will be checked for\n * intersection changes.\n */\nIntersectionObserver.prototype.THROTTLE_TIMEOUT = 100;\n\n\n/**\n * The frequency in which the polyfill polls for intersection changes.\n * this can be updated on a per instance basis and must be set prior to\n * calling `observe` on the first target.\n */\nIntersectionObserver.prototype.POLL_INTERVAL = null;\n\n/**\n * Use a mutation observer on the root element\n * to detect intersection changes.\n */\nIntersectionObserver.prototype.USE_MUTATION_OBSERVER = true;\n\n\n/**\n * Starts observing a target element for intersection changes based on\n * the thresholds values.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.observe = function(target) {\n  var isTargetAlreadyObserved = this._observationTargets.some(function(item) {\n    return item.element == target;\n  });\n\n  if (isTargetAlreadyObserved) {\n    return;\n  }\n\n  if (!(target && target.nodeType == 1)) {\n    throw new Error('target must be an Element');\n  }\n\n  this._registerInstance();\n  this._observationTargets.push({element: target, entry: null});\n  this._monitorIntersections();\n  this._checkForIntersections();\n};\n\n\n/**\n * Stops observing a target element for intersection changes.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.unobserve = function(target) {\n  this._observationTargets =\n      this._observationTargets.filter(function(item) {\n\n    return item.element != target;\n  });\n  if (!this._observationTargets.length) {\n    this._unmonitorIntersections();\n    this._unregisterInstance();\n  }\n};\n\n\n/**\n * Stops observing all target elements for intersection changes.\n */\nIntersectionObserver.prototype.disconnect = function() {\n  this._observationTargets = [];\n  this._unmonitorIntersections();\n  this._unregisterInstance();\n};\n\n\n/**\n * Returns any queue entries that have not yet been reported to the\n * callback and clears the queue. This can be used in conjunction with the\n * callback to obtain the absolute most up-to-date intersection information.\n * @return {Array} The currently queued entries.\n */\nIntersectionObserver.prototype.takeRecords = function() {\n  var records = this._queuedEntries.slice();\n  this._queuedEntries = [];\n  return records;\n};\n\n\n/**\n * Accepts the threshold value from the user configuration object and\n * returns a sorted array of unique threshold values. If a value is not\n * between 0 and 1 and error is thrown.\n * @private\n * @param {Array|number=} opt_threshold An optional threshold value or\n *     a list of threshold values, defaulting to [0].\n * @return {Array} A sorted list of unique and valid threshold values.\n */\nIntersectionObserver.prototype._initThresholds = function(opt_threshold) {\n  var threshold = opt_threshold || [0];\n  if (!Array.isArray(threshold)) threshold = [threshold];\n\n  return threshold.sort().filter(function(t, i, a) {\n    if (typeof t != 'number' || isNaN(t) || t < 0 || t > 1) {\n      throw new Error('threshold must be a number between 0 and 1 inclusively');\n    }\n    return t !== a[i - 1];\n  });\n};\n\n\n/**\n * Accepts the rootMargin value from the user configuration object\n * and returns an array of the four margin values as an object containing\n * the value and unit properties. If any of the values are not properly\n * formatted or use a unit other than px or %, and error is thrown.\n * @private\n * @param {string=} opt_rootMargin An optional rootMargin value,\n *     defaulting to '0px'.\n * @return {Array<Object>} An array of margin objects with the keys\n *     value and unit.\n */\nIntersectionObserver.prototype._parseRootMargin = function(opt_rootMargin) {\n  var marginString = opt_rootMargin || '0px';\n  var margins = marginString.split(/\\s+/).map(function(margin) {\n    var parts = /^(-?\\d*\\.?\\d+)(px|%)$/.exec(margin);\n    if (!parts) {\n      throw new Error('rootMargin must be specified in pixels or percent');\n    }\n    return {value: parseFloat(parts[1]), unit: parts[2]};\n  });\n\n  // Handles shorthand.\n  margins[1] = margins[1] || margins[0];\n  margins[2] = margins[2] || margins[0];\n  margins[3] = margins[3] || margins[1];\n\n  return margins;\n};\n\n\n/**\n * Starts polling for intersection changes if the polling is not already\n * happening, and if the page's visibilty state is visible.\n * @private\n */\nIntersectionObserver.prototype._monitorIntersections = function() {\n  if (!this._monitoringIntersections) {\n    this._monitoringIntersections = true;\n\n    // If a poll interval is set, use polling instead of listening to\n    // resize and scroll events or DOM mutations.\n    if (this.POLL_INTERVAL) {\n      this._monitoringInterval = setInterval(\n          this._checkForIntersections, this.POLL_INTERVAL);\n    }\n    else {\n      addEvent(window, 'resize', this._checkForIntersections, true);\n      addEvent(document, 'scroll', this._checkForIntersections, true);\n\n      if (this.USE_MUTATION_OBSERVER && 'MutationObserver' in window) {\n        this._domObserver = new MutationObserver(this._checkForIntersections);\n        this._domObserver.observe(document, {\n          attributes: true,\n          childList: true,\n          characterData: true,\n          subtree: true\n        });\n      }\n    }\n  }\n};\n\n\n/**\n * Stops polling for intersection changes.\n * @private\n */\nIntersectionObserver.prototype._unmonitorIntersections = function() {\n  if (this._monitoringIntersections) {\n    this._monitoringIntersections = false;\n\n    clearInterval(this._monitoringInterval);\n    this._monitoringInterval = null;\n\n    removeEvent(window, 'resize', this._checkForIntersections, true);\n    removeEvent(document, 'scroll', this._checkForIntersections, true);\n\n    if (this._domObserver) {\n      this._domObserver.disconnect();\n      this._domObserver = null;\n    }\n  }\n};\n\n\n/**\n * Scans each observation target for intersection changes and adds them\n * to the internal entries queue. If new entries are found, it\n * schedules the callback to be invoked.\n * @private\n */\nIntersectionObserver.prototype._checkForIntersections = function() {\n  var rootIsInDom = this._rootIsInDom();\n  var rootRect = rootIsInDom ? this._getRootRect() : getEmptyRect();\n\n  this._observationTargets.forEach(function(item) {\n    var target = item.element;\n    var targetRect = getBoundingClientRect(target);\n    var rootContainsTarget = this._rootContainsTarget(target);\n    var oldEntry = item.entry;\n    var intersectionRect = rootIsInDom && rootContainsTarget &&\n        this._computeTargetAndRootIntersection(target, rootRect);\n\n    var newEntry = item.entry = new IntersectionObserverEntry({\n      time: now(),\n      target: target,\n      boundingClientRect: targetRect,\n      rootBounds: rootRect,\n      intersectionRect: intersectionRect\n    });\n\n    if (!oldEntry) {\n      this._queuedEntries.push(newEntry);\n    } else if (rootIsInDom && rootContainsTarget) {\n      // If the new entry intersection ratio has crossed any of the\n      // thresholds, add a new entry.\n      if (this._hasCrossedThreshold(oldEntry, newEntry)) {\n        this._queuedEntries.push(newEntry);\n      }\n    } else {\n      // If the root is not in the DOM or target is not contained within\n      // root but the previous entry for this target had an intersection,\n      // add a new record indicating removal.\n      if (oldEntry && oldEntry.isIntersecting) {\n        this._queuedEntries.push(newEntry);\n      }\n    }\n  }, this);\n\n  if (this._queuedEntries.length) {\n    this._callback(this.takeRecords(), this);\n  }\n};\n\n\n/**\n * Accepts a target and root rect computes the intersection between then\n * following the algorithm in the spec.\n * TODO(philipwalton): at this time clip-path is not considered.\n * https://w3c.github.io/IntersectionObserver/#calculate-intersection-rect-algo\n * @param {Element} target The target DOM element\n * @param {Object} rootRect The bounding rect of the root after being\n *     expanded by the rootMargin value.\n * @return {?Object} The final intersection rect object or undefined if no\n *     intersection is found.\n * @private\n */\nIntersectionObserver.prototype._computeTargetAndRootIntersection =\n    function(target, rootRect) {\n\n  // If the element isn't displayed, an intersection can't happen.\n  if (window.getComputedStyle(target).display == 'none') return;\n\n  var targetRect = getBoundingClientRect(target);\n  var intersectionRect = targetRect;\n  var parent = getParentNode(target);\n  var atRoot = false;\n\n  while (!atRoot) {\n    var parentRect = null;\n    var parentComputedStyle = parent.nodeType == 1 ?\n        window.getComputedStyle(parent) : {};\n\n    // If the parent isn't displayed, an intersection can't happen.\n    if (parentComputedStyle.display == 'none') return;\n\n    if (parent == this.root || parent == document) {\n      atRoot = true;\n      parentRect = rootRect;\n    } else {\n      // If the element has a non-visible overflow, and it's not the <body>\n      // or <html> element, update the intersection rect.\n      // Note: <body> and <html> cannot be clipped to a rect that's not also\n      // the document rect, so no need to compute a new intersection.\n      if (parent != document.body &&\n          parent != document.documentElement &&\n          parentComputedStyle.overflow != 'visible') {\n        parentRect = getBoundingClientRect(parent);\n      }\n    }\n\n    // If either of the above conditionals set a new parentRect,\n    // calculate new intersection data.\n    if (parentRect) {\n      intersectionRect = computeRectIntersection(parentRect, intersectionRect);\n\n      if (!intersectionRect) break;\n    }\n    parent = getParentNode(parent);\n  }\n  return intersectionRect;\n};\n\n\n/**\n * Returns the root rect after being expanded by the rootMargin value.\n * @return {Object} The expanded root rect.\n * @private\n */\nIntersectionObserver.prototype._getRootRect = function() {\n  var rootRect;\n  if (this.root) {\n    rootRect = getBoundingClientRect(this.root);\n  } else {\n    // Use <html>/<body> instead of window since scroll bars affect size.\n    var html = document.documentElement;\n    var body = document.body;\n    rootRect = {\n      top: 0,\n      left: 0,\n      right: html.clientWidth || body.clientWidth,\n      width: html.clientWidth || body.clientWidth,\n      bottom: html.clientHeight || body.clientHeight,\n      height: html.clientHeight || body.clientHeight\n    };\n  }\n  return this._expandRectByRootMargin(rootRect);\n};\n\n\n/**\n * Accepts a rect and expands it by the rootMargin value.\n * @param {Object} rect The rect object to expand.\n * @return {Object} The expanded rect.\n * @private\n */\nIntersectionObserver.prototype._expandRectByRootMargin = function(rect) {\n  var margins = this._rootMarginValues.map(function(margin, i) {\n    return margin.unit == 'px' ? margin.value :\n        margin.value * (i % 2 ? rect.width : rect.height) / 100;\n  });\n  var newRect = {\n    top: rect.top - margins[0],\n    right: rect.right + margins[1],\n    bottom: rect.bottom + margins[2],\n    left: rect.left - margins[3]\n  };\n  newRect.width = newRect.right - newRect.left;\n  newRect.height = newRect.bottom - newRect.top;\n\n  return newRect;\n};\n\n\n/**\n * Accepts an old and new entry and returns true if at least one of the\n * threshold values has been crossed.\n * @param {?IntersectionObserverEntry} oldEntry The previous entry for a\n *    particular target element or null if no previous entry exists.\n * @param {IntersectionObserverEntry} newEntry The current entry for a\n *    particular target element.\n * @return {boolean} Returns true if a any threshold has been crossed.\n * @private\n */\nIntersectionObserver.prototype._hasCrossedThreshold =\n    function(oldEntry, newEntry) {\n\n  // To make comparing easier, an entry that has a ratio of 0\n  // but does not actually intersect is given a value of -1\n  var oldRatio = oldEntry && oldEntry.isIntersecting ?\n      oldEntry.intersectionRatio || 0 : -1;\n  var newRatio = newEntry.isIntersecting ?\n      newEntry.intersectionRatio || 0 : -1;\n\n  // Ignore unchanged ratios\n  if (oldRatio === newRatio) return;\n\n  for (var i = 0; i < this.thresholds.length; i++) {\n    var threshold = this.thresholds[i];\n\n    // Return true if an entry matches a threshold or if the new ratio\n    // and the old ratio are on the opposite sides of a threshold.\n    if (threshold == oldRatio || threshold == newRatio ||\n        threshold < oldRatio !== threshold < newRatio) {\n      return true;\n    }\n  }\n};\n\n\n/**\n * Returns whether or not the root element is an element and is in the DOM.\n * @return {boolean} True if the root element is an element and is in the DOM.\n * @private\n */\nIntersectionObserver.prototype._rootIsInDom = function() {\n  return !this.root || containsDeep(document, this.root);\n};\n\n\n/**\n * Returns whether or not the target element is a child of root.\n * @param {Element} target The target element to check.\n * @return {boolean} True if the target element is a child of root.\n * @private\n */\nIntersectionObserver.prototype._rootContainsTarget = function(target) {\n  return containsDeep(this.root || document, target);\n};\n\n\n/**\n * Adds the instance to the global IntersectionObserver registry if it isn't\n * already present.\n * @private\n */\nIntersectionObserver.prototype._registerInstance = function() {\n  if (registry.indexOf(this) < 0) {\n    registry.push(this);\n  }\n};\n\n\n/**\n * Removes the instance from the global IntersectionObserver registry.\n * @private\n */\nIntersectionObserver.prototype._unregisterInstance = function() {\n  var index = registry.indexOf(this);\n  if (index != -1) registry.splice(index, 1);\n};\n\n\n/**\n * Returns the result of the performance.now() method or null in browsers\n * that don't support the API.\n * @return {number} The elapsed time since the page was requested.\n */\nfunction now() {\n  return window.performance && performance.now && performance.now();\n}\n\n\n/**\n * Throttles a function and delays its executiong, so it's only called at most\n * once within a given time period.\n * @param {Function} fn The function to throttle.\n * @param {number} timeout The amount of time that must pass before the\n *     function can be called again.\n * @return {Function} The throttled function.\n */\nfunction throttle(fn, timeout) {\n  var timer = null;\n  return function () {\n    if (!timer) {\n      timer = setTimeout(function() {\n        fn();\n        timer = null;\n      }, timeout);\n    }\n  };\n}\n\n\n/**\n * Adds an event handler to a DOM node ensuring cross-browser compatibility.\n * @param {Node} node The DOM node to add the event handler to.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to add.\n * @param {boolean} opt_useCapture Optionally adds the even to the capture\n *     phase. Note: this only works in modern browsers.\n */\nfunction addEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.addEventListener == 'function') {\n    node.addEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.attachEvent == 'function') {\n    node.attachEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Removes a previously added event handler from a DOM node.\n * @param {Node} node The DOM node to remove the event handler from.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to remove.\n * @param {boolean} opt_useCapture If the event handler was added with this\n *     flag set to true, it should be set to true here in order to remove it.\n */\nfunction removeEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.removeEventListener == 'function') {\n    node.removeEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.detatchEvent == 'function') {\n    node.detatchEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Returns the intersection between two rect objects.\n * @param {Object} rect1 The first rect.\n * @param {Object} rect2 The second rect.\n * @return {?Object} The intersection rect or undefined if no intersection\n *     is found.\n */\nfunction computeRectIntersection(rect1, rect2) {\n  var top = Math.max(rect1.top, rect2.top);\n  var bottom = Math.min(rect1.bottom, rect2.bottom);\n  var left = Math.max(rect1.left, rect2.left);\n  var right = Math.min(rect1.right, rect2.right);\n  var width = right - left;\n  var height = bottom - top;\n\n  return (width >= 0 && height >= 0) && {\n    top: top,\n    bottom: bottom,\n    left: left,\n    right: right,\n    width: width,\n    height: height\n  };\n}\n\n\n/**\n * Shims the native getBoundingClientRect for compatibility with older IE.\n * @param {Element} el The element whose bounding rect to get.\n * @return {Object} The (possibly shimmed) rect of the element.\n */\nfunction getBoundingClientRect(el) {\n  var rect;\n\n  try {\n    rect = el.getBoundingClientRect();\n  } catch (err) {\n    // Ignore Windows 7 IE11 \"Unspecified error\"\n    // https://github.com/w3c/IntersectionObserver/pull/205\n  }\n\n  if (!rect) return getEmptyRect();\n\n  // Older IE\n  if (!(rect.width && rect.height)) {\n    rect = {\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom,\n      left: rect.left,\n      width: rect.right - rect.left,\n      height: rect.bottom - rect.top\n    };\n  }\n  return rect;\n}\n\n\n/**\n * Returns an empty rect object. An empty rect is returned when an element\n * is not in the DOM.\n * @return {Object} The empty rect.\n */\nfunction getEmptyRect() {\n  return {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0\n  };\n}\n\n/**\n * Checks to see if a parent element contains a child elemnt (including inside\n * shadow DOM).\n * @param {Node} parent The parent element.\n * @param {Node} child The child element.\n * @return {boolean} True if the parent node contains the child node.\n */\nfunction containsDeep(parent, child) {\n  var node = child;\n  while (node) {\n    if (node == parent) return true;\n\n    node = getParentNode(node);\n  }\n  return false;\n}\n\n\n/**\n * Gets the parent node of an element or its host element if the parent node\n * is a shadow root.\n * @param {Node} node The node whose parent to get.\n * @return {Node|null} The parent node or null if no parent exists.\n */\nfunction getParentNode(node) {\n  var parent = node.parentNode;\n\n  if (parent && parent.nodeType == 11 && parent.host) {\n    // If the parent is a shadow root, return the host element.\n    return parent.host;\n  }\n  return parent;\n}\n\n\n// Exposes the constructors globally.\nwindow.IntersectionObserver = IntersectionObserver;\nwindow.IntersectionObserverEntry = IntersectionObserverEntry;\n\n}(window, document));\n","import {\n  domReady,\n  assign,\n  extractFieldsFrom,\n  isTrackable,\n} from '../utils';\n\nrequire('intersection-observer');\n\n/**\n * Detects whether or not an intersection record is visible based on the threshold.\n *\n * @param {number} threshold\n * @param {IntersectionObserverEntry} record\n * @return {boolean}\n */\nfunction isVisible(threshold, record) {\n  if (threshold === 0) {\n    const i = record.intersectionRect;\n    return i.top > 0 || i.bottom > 0 || i.left > 0 || i.right > 0;\n  }\n  return record.intersectionRatio >= threshold;\n}\n\n/**\n * @todo We may want to explore including a MutationObserver polyfill.\n */\nexport default class ViewListener {\n  constructor(tracker, options = {}) {\n    // Disable if the browser does not support the required features.\n    if (!(window.IntersectionObserver && window.MutationObserver)) return;\n\n    const defaults = {\n      trackOnce: true,\n      threshold: 0.25,\n      rootMargin: '0px',\n    };\n    this.opts = assign(defaults, options);\n\n    // Bind methods.\n    this.handleIntersection = this.handleIntersection.bind(this);\n    this.handleMutations = this.handleMutations.bind(this);\n    this.handleAddedElement = this.handleAddedElement.bind(this);\n    this.handleRemovedElement = this.handleRemovedElement.bind(this);\n\n    this.mutationObserver = null;\n    this.intersectionObserver = null;\n\n    this.tracker = tracker;\n\n    domReady(() => {\n      this.observeElements();\n    });\n  }\n\n  static getElements() {\n    const nodes = [];\n    const elements = document.querySelectorAll('[data-fortnight-action=\"view\"]');\n    for (let i = 0; i < elements.length; i += 1) {\n      nodes.push(elements[i]);\n    }\n    return nodes;\n  }\n\n  observeElements() {\n    // Setup intersection observer.\n    if (!this.intersectionObserver) {\n      this.intersectionObserver = new IntersectionObserver(this.handleIntersection, {\n        rootMargin: this.opts.rootMargin,\n        threshold: this.opts.threshold,\n      });\n      const elements = ViewListener.getElements();\n      elements.forEach(element => this.intersectionObserver.observe(element));\n    }\n\n    // Setup mutation observer.\n    if (!this.mutationObserver) {\n      this.mutationObserver = new MutationObserver(this.handleMutations);\n      this.mutationObserver.observe(document.body, {\n        childList: true,\n        subtree: true,\n      });\n    }\n\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=612323\n    requestAnimationFrame(() => {});\n  }\n\n  unobserveAllElements() {\n    this.intersectionObserver.disconnect();\n    this.intersectionObserver = null;\n\n    this.mutationObserver.disconnect();\n    this.mutationObserver = null;\n\n    this.elementMap = {};\n  }\n\n  handleIntersection(records) {\n    for (let i = 0; i < records.length; i += 1) {\n      const record = records[i];\n      if (isVisible(this.opts.threshold, record)) {\n        const node = record.target;\n        this.sendEvent(node);\n        if (this.opts.trackOnce) {\n          this.handleRemovedElement(node);\n        }\n      }\n    }\n  }\n\n  handleMutations(mutations) {\n    mutations.forEach((mutation) => {\n      const { addedNodes, removedNodes } = mutation;\n      for (let r = 0; r < removedNodes.length; r += 1) {\n        const removed = removedNodes[r];\n        this.walkTree(removed, this.handleRemovedElement);\n      }\n      for (let a = 0; a < addedNodes.length; a += 1) {\n        const added = addedNodes[a];\n        this.walkTree(added, this.handleAddedElement);\n      }\n    });\n  }\n\n  handleAddedElement(node) {\n    if (node) {\n      this.intersectionObserver.observe(node);\n    }\n  }\n\n  handleRemovedElement(node) {\n    if (node) {\n      this.intersectionObserver.unobserve(node);\n    }\n  }\n\n  walkTree(node, callback) {\n    if (isTrackable(node, 'view')) {\n      callback(node);\n    }\n    for (let i = 0; i < node.childNodes.length; i += 1) {\n      const child = node.childNodes[i];\n      this.walkTree(child, callback);\n    }\n  }\n\n  sendEvent(node) {\n    const fields = extractFieldsFrom(node);\n    this.tracker.execute('event', 'view', fields, { transport: 'beacon' });\n  }\n\n  destroy() {\n    this.unobserveAllElements();\n  }\n}\n","import { assign, buildQuery } from '../utils';\n\nconst domain = 'https://fortnight.as3.io';\n\nexport default class EventTransport {\n  /**\n   * Constructor.\n   *\n   * @param {?object} options\n   * @param {?string} options.domain The backend domain.\n   */\n  constructor(options = {}) {\n    const defaults = { domain };\n    this.options = assign(defaults, options);\n  }\n\n  /**\n   * Sends an event to the backend.\n   *\n   * @param {string} action The event action, e.g. `view`, `load` or `click`\n   * @param {object} fields The event fields\n   * @param {string} fields.pid The placement ID\n   * @param {string} fields.cid The campaign ID\n   * @param {?object} options The event options\n   * @param {?string} options.transport The transport type. Image is the default.\n   * @param {?Function} options.callback The callback to fire once complete.\n   */\n  send(\n    action,\n    { pid, cid, uuid } = {},\n    { transport, callback } = {},\n  ) {\n    const act = String(action).trim().toLowerCase();\n    if (!act) return;\n    const _ = (new Date()).getTime();\n    const params = {\n      pid,\n      cid,\n      uuid,\n      _,\n    };\n    const query = buildQuery(params);\n    const endpoint = `/e/${act}.gif?${query}`;\n    const url = this.createUrl(endpoint);\n\n    if (transport === 'beacon' && navigator.sendBeacon) {\n      if (typeof callback === 'function') callback(act, params);\n      navigator.sendBeacon(url);\n    } else {\n      const img = document.createElement('img');\n      if (typeof callback === 'function') {\n        img.onload = () => callback(act, params);\n        img.onerror = () => callback(act, params);\n      }\n      img.src = url;\n    }\n  }\n\n  /**\n   * Configures the domain name for sending events.\n   *\n   * @return string\n   */\n  get domain() {\n    if (!this.options.domain) return domain;\n    return `${this.options.domain.replace(/\\/+$/, '')}`;\n  }\n\n  /**\n   * Creates a URL using the provided endoint with the configured domain.\n   *\n   * @param {string} endpoint\n   * @return {string}\n   */\n  createUrl(endpoint) {\n    return `${this.domain}/${endpoint.replace(/^\\/+/, '')}`;\n  }\n}\n","import { delegate, parseUrl } from 'dom-utils';\nimport {\n  withTimeout,\n  assign,\n  extractFieldsFrom,\n  isTrackable,\n} from '../utils';\n\n/**\n * Determines if a link click event will cause the current page to unload.\n * @todo Need to determine if link is opened via the context menu.\n *\n * @param {Event} event\n * @param {Element} link\n * @return {boolean}\n */\nfunction linkWillUnloadPage(event, link) {\n  return !(\n    // Only look a click events that will not open a new window or tab\n    event.type !== 'click' || link.target === '_blank' ||\n    // Cmd+Click (Mac) and Ctrl+Click (Windows) opens a new tab\n    // Shift+Click opens a new window in Chrome/Firefox, in Safari it adds to favorites\n    // Opt+Click (Mac) is used to download\n    event.metaKey || event.ctrlKey || event.shiftKey || event.altKey ||\n    // Middle mouse clicks (2) open link in new tab\n    // Right clicks (3) on Firefox trigger a click event\n    event.which > 1\n  );\n}\n\nexport default class LinkListener {\n  /**\n   *\n   * @param {Tracker} tracker\n   * @param {object} options\n   */\n  constructor(tracker, options = {}) {\n    // Prevent execution when disabled or unsupported\n    if (!options.enabled || !window.addEventListener) return;\n\n    this.tracker = tracker;\n    const defaults = {\n      events: ['click'],\n      selector: 'a',\n      shouldTrackLink: LinkListener.shouldTrackLink,\n      callback: undefined,\n    };\n    this.opts = assign(defaults, options);\n\n    this.handleInteractions = this.handleInteractions.bind(this);\n\n    this.delegates = {};\n    this.opts.events.forEach((event) => {\n      this.delegates[event] = delegate(\n        document,\n        event,\n        this.opts.selector,\n        this.handleInteractions,\n        { composed: true, useCapture: true },\n      );\n    });\n  }\n\n  handleInteractions(event, link) {\n    if (this.opts.shouldTrackLink(link, parseUrl)) {\n      const href = link.getAttribute('href');\n      const fields = extractFieldsFrom(link);\n\n      const eventOpts = {\n        transport: 'beacon',\n        callback: this.opts.callback,\n      };\n\n      const supportsBeacon = navigator.sendBeacon || false;\n      if (!supportsBeacon && linkWillUnloadPage(event, link)) {\n        // The page will unload. Pause the transition and send the event.\n        const handler = () => {\n          window.removeEventListener('click', handler);\n\n          if (!event.defaultPrevented) {\n            event.preventDefault();\n\n            // @todo What happens when the user-land code already does something similar?\n            // For example, an event listener is previously attached to the link, that also\n            // triggers a window.location call. Wouldn't that prevent the event from\n            // being tracked?\n            const original = eventOpts.callback;\n            eventOpts.callback = withTimeout((...args) => {\n              if (typeof original === 'function') original(...args);\n              window.location.href = href;\n            });\n          }\n          this.tracker.execute('event', 'click', fields, eventOpts);\n        };\n        window.addEventListener('click', handler);\n      } else {\n        // Send the event directly.\n        this.tracker.execute('event', 'click', fields, eventOpts);\n      }\n    }\n  }\n\n  /**\n   * Determines if the link should be tracked.\n   *\n   * @param {Element} element\n   * @param {Function} urlParser\n   * @return {boolean}\n   */\n  static shouldTrackLink(element, urlParser) {\n    const href = element.getAttribute('href');\n    const url = urlParser(href);\n    return url.protocol.slice(0, 4) === 'http' && isTrackable(element, 'click');\n  }\n\n  /**\n   * Destroys all event listeners.\n   */\n  destroy() {\n    Object.keys(this.delegates).forEach(key => this.delegates[key].destroy());\n  }\n}\n","import { assign } from '../utils';\nimport LinkListener from './link-listener';\nimport EventTransport from './event-transport';\nimport ViewListener from './view-listener';\n\nconst listeners = [];\n\nexport default class Tracker {\n  /**\n   * Constructor.\n   *\n   * @param {?object} options\n   * @param {boolean} [options.trackLinks=true] Whether to track links.\n   */\n  constructor(options = {}) {\n    const defaults = {\n      trackLinks: true,\n      debug: false,\n      onLinkTrack: undefined,\n    };\n    const opts = assign(defaults, options);\n    this.opts = opts;\n\n    const transport = new EventTransport({ domain: opts.domain });\n    this.commands = {\n      event: transport.send.bind(transport),\n    };\n    listeners.push(new LinkListener(this, {\n      enabled: opts.trackLinks,\n      callback: opts.onLinkTrack,\n    }));\n    listeners.push(new ViewListener(this, {}));\n  }\n\n  /**\n   * Executes a command on the tracker.\n   *\n   * @param {string} command\n   * @param {...object} args\n   */\n  execute(command, ...args) {\n    if (this.commands[command]) {\n      if (this.opts.debug) {\n        // eslint-disable-next-line no-console\n        console.info('FORTNIGHT', 'Tracker.execute', command, ...args);\n      }\n      this.commands[command](...args);\n    }\n  }\n\n  /**\n   * The tracker instance is being destroyed.\n   * Destroy all event listeners.\n   */\n  destroy() { // eslint-disable-line class-methods-use-this\n    listeners.forEach(listener => listener.destroy());\n  }\n}\n","import Tracker from './tracker';\n\nlet tracker;\nexport default function app(command, ...args) {\n  if (command === 'init') {\n    if (!tracker) tracker = new Tracker(...args);\n  } else if (command === 'destroy') {\n    if (tracker) {\n      tracker.destroy();\n      tracker = undefined;\n    }\n  } else {\n    if (!tracker) throw new Error('No Fortnight instance has been initialized.');\n    tracker.execute(command, ...args);\n  }\n}\n","import app from './app';\n\n// Find the command queue in the `window` object.\nconst WINDOW_VAR_NAME = 'FortnightObject';\nconst queueName = window[WINDOW_VAR_NAME];\nif (!queueName || !window[queueName]) {\n  throw new Error(`No ${WINDOW_VAR_NAME} object was found or initialized. Was the proper JavaScript included on the page?`);\n}\nconst commandQueue = window[queueName];\n\n// Apply the queue to the app.\nconst queue = commandQueue.q;\nif (Array.isArray(queue)) {\n  // Find and send the init commands first, in case the user sent the commands out of order.\n  queue.filter(args => args[0] === 'init').forEach(args => app(...args));\n  // Send all other commands.\n  queue.filter(args => args[0] !== 'init').forEach(args => app(...args));\n}\n\n// Replace the queue with the app.\nwindow[queueName] = app;\n"],"sourceRoot":""}